name: Android CD Build
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write

jobs:
  android-cd-build:
    name: Android CD Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          cache: 'npm'
          node-version-file: .nvmrc

      - name: Cache Node Modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: gradle

      - name: Cache Gradle dependencies and wrapper
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Create signing properties file
        run: |
          echo "storeFilePath=../../sathesh-android-signing-key.keystore" > sathesh-android-signing-key.properties
          echo "storePassword=${{ secrets.SATHESH_ANDROID_SIGNING_KEY_STORE_PASSWORD }}" >> sathesh-android-signing-key.properties
          echo "keyAlias=${{ secrets.SATHESH_ANDROID_SIGNING_KEY_ALIAS }}" >> sathesh-android-signing-key.properties
          echo "keyPassword=${{ secrets.SATHESH_ANDROID_SIGNING_KEY_PASSWORD }}" >> sathesh-android-signing-key.properties

      - name: Decode and write base64 key to keystore file from secret
        run: echo "${{ secrets.SATHESH_ANDROID_SIGNING_KEY_BASE64 }}" | base64 --decode > sathesh-android-signing-key.keystore

      - name: Build Android app
        run: cd android && ./gradlew assembleRelease
      
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-cd-build-app
          path: android/app/build/outputs/apk/release/app-release.apk
      
      - name: Post comment on PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const runId = process.env.GITHUB_RUN_ID;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const artifactUrl = `https://github.com/${owner}/${repo}/actions/runs/${runId}`;
            const commentBody = `ðŸŽ‰ The Android APK build is ready! You can download it from the [Github Actions Runs Page](${artifactUrl}).`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner,
              repo,
              body: commentBody,
            });
          
